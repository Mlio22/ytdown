from YTDown.Sub.parser import Subtitle
from .AssParser import PenParser, WSParser, EventParser, WPParser
from .utils import checknull, writeevent


class AssSubtitle(Subtitle):
    def __init__(self, url):
        super().__init__(url)

        #  properties
        self.__pens = []
        self.__win_styles = []
        self.__win_positions = []
        self.__parsed_events = []

        #  ass file header
        self.__header = '''[Script Info]\n; Script generated by Aegisub 3.2.2\n; http://www.aegisub.org/\nTitle: Default Aegisub file\nScriptType: v4.00+\nWrapStyle: 0\nScaledBorderAndShadow: yes\nYCbCr Matrix: None\nPlayResX: 384\nPlayResY: 288\n\n'''

        # ass file style text list
        self.__stylelist = ""

        # ass file event text list
        self.__eventlist = ""

        # karaokes if any
        self.__karaoke_list = []

        # convert
        if self._isparseable:
            self.__getparsedproperties()
            self._convert()
        else:
            print("cannot convert")

    def __checkkaraoke(self):
        for event in self.__parsed_events:
            if hasattr(event['segs'], 'utf8'):
                return True
        return False

    def __parseKaraoke(self):
        for event in self.__parsed_events:
            karaoke_item = []
            duration = event['time']['d']

            segs = event['segs']

            for i in range(len(segs)):
                karaoke_start = checknull(segs[i], 'tOffsetMs', 0)
                karaoke_end = duration if i == len(segs) else checknull(segs[i], 'tOffsetMs', karaoke_start)

                karaoke_item.append(karaoke_end)
            self.__karaoke_list.append(karaoke_item)

    def __isdefault(self):
        # true if all properties length is 1 (except events obviously)
        return len(self.__pens) == 0 and len(self.__win_positions) == 0 and len(self.__win_styles) == 0

    def __getparsedproperties(self):
        self.__pens = PenParser(self._caption_json['pens']).properties
        self.__win_styles = WSParser(self._caption_json['wsWinStyles']).properties
        self.__win_positions = WPParser(self._caption_json['wpWinPositions']).properties
        self.__parsed_events = EventParser(self._events).properties

    def _convert(self):
        if self.__checkkaraoke():
            self.__parseKaraoke()

        # default style(s) that will be used in aegisub
        self.__stylelist += "[V4+ Styles]\nFormat: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding\n"
        if self.__isdefault():
            self.__stylelist += "Style: Youtube Default,Roboto,15,&H00FFFFFF,&HFF000000,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,0.5,0,2,10,10,10,1"
        else:
            self.__stylelist += "Style: Default,Roboto,15,&H00FFFFFF,&HFF000000,&HFF000000,&H00000000,0,0,0,0,100,100,0,0,1,0.5,0,2,10,10,10,1\nStyle: Default Opaque,Roboto,15,&H00FFFFFF,&HA0000000,&H00000000,&HFE000000,0,0,0,0,100,100,0,0,3,0.5,0,2,10,10,10,1\nStyle: Default Karaoke,Roboto,15,&H00FFFFFF,&HFF000000,&H00000000,&HFE000000,0,0,0,0,100,100,0,0,1,0,0,2,10,10,10,1"

        self.__eventlist = "\n\n[Events]\nFormat: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text\n"
        karaoke_iter = 0

        #  writing dialogue(s)
        for event in self.__parsed_events:
            self.__eventlist += writeevent(
                self.__pens,
                self.__win_positions,
                self.__win_styles,
                event['segs'],
                event['time'],
                event['p'],
                event['win']['wp'],
                event['win']['ws'],
                checknull(self.__karaoke_list, karaoke_iter + 1, []),
                self.__isdefault()
            )
            karaoke_iter += 1
        self._subtitle = self.__header + self.__stylelist + self.__eventlist

